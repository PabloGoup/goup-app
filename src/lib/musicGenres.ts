// src/lib/musicGenres.ts

export type MusicGenreEntry = {
    genre: string;       // nombre visible (principal)
    slug: string;        // slug legible
    order: number;       // orden sugerido
    subgenres: string[]; // lista de subgéneros
  };
  
  export const MUSIC_GENRES: MusicGenreEntry[] = [
    {
      genre: "Música Electrónica",
      slug: "musica-electronica",
      order: 1,
      subgenres: [
        "House",
        "Techno",
        "Trance",
        "Dubstep",
        "Drum and Bass",
        "Future Bass",
        "Hardstyle",
        "Minimal Techno",
        "Melodic Techno",
        "Hard Techno",
        "Acid House",
        "Chillout",
        "Big Room",
        "Electro House",
        "Psytrance",
        "Trap (EDM)",
        "Jungle",
        "Glitch Hop",
        "Ambient",
        "Complextro",
        "Progressive House",
        "Moombahton",
        "Guaracha",
      ],
    },
    {
        genre: "Regueton / Cumbia",
        slug: "regueton-cumbia",
        order: 2,
        subgenres: [
          "Reguetón",
          "Cumbia"
        ],
      },
    {
      genre: "Rock",
      slug: "rock",
      order: 3,
      subgenres: [
        "Punk",
        "Afro-punk",
        "Anarcho punk",
        "Glam punk",
        "Gothic punk",
        "Post-punk",
        "Post-punk revival",
        "Psychedelic rock",
        "Prog rock",
        "Grunge",
        "Garage punk",
        "Power metal",
        "Thrash metal",
        "Progressive rock",
        "Metalcore",
        "Rap rock",
        "Punk blues",
        "Psychedelic folk",
        "Surf rock",
        "Math rock",
        "Power pop",
        "Pop punk",
      ],
    },
    {
      genre: "Pop",
      slug: "pop",
      order: 4,
      subgenres: [
        "Teen Pop",
        "Pop Rock",
        "Pop Punk",
        "Synthpop",
        "Electropop",
        "K-Pop",
        "J-Pop",
        "Dream Pop",
        "Hyperpop",
        "Bubblegum Pop",
      ],
    },
    {
      genre: "Hip-Hop / Rap",
      slug: "hip-hop-rap",
      order: 4,
      subgenres: [
        "Alternative Hip-Hop",
        "Experimental Hip-Hop",
        "Boom bap",
        "Bounce",
        "British hip-hop",
        "Cloud rap",
        "Crunk",
        "Crunkcore",
        "Gangsta rap",
        "Horrorcore",
        "Lofi hip-hop",
        "Miami bass",
        "Mumble rap",
        "Snap music",
        "Drill",
        "Latin trap",
        "Phonk",
        "Pluggnb",
        "Trap music",
        "Jazz rap",
      ],
    },
    {
      genre: "Jazz",
      slug: "jazz",
      order: 35,
      subgenres: [
        "Bebop",
        "Swing",
        "Cool Jazz",
        "Smooth Jazz",
        "Free Jazz",
        "Acid Jazz",
        "Jazz Fusion",
        "Dixieland",
        "Gypsy Jazz",
        "Traditional Jazz",
      ],
    },
    {
      genre: "Clásica",
      slug: "clasica",
      order: 6,
      subgenres: [
        "Baroque",
        "Classical Period",
        "Romantic",
        "Minimalism",
        "Modern Classical",
        "Contemporary Classical",
        "Chamber Music",
        "Opera",
        "Avant-garde classical",
        "Classical crossover",
      ],
    },
    {
      genre: "Metal",
      slug: "metal",
      order: 7,
      subgenres: [
        "Alternative metal",
        "Avant-garde metal",
        "Black metal",
        "Death metal",
        "Doom metal",
        "Folk metal",
        "Glam metal",
        "Gothic metal",
        "Industrial metal",
        "Metalcore",
        "Neoclassical metal",
        "Power metal",
        "Progressive metal",
        "Sludge metal",
        "Speed metal",
        "Symphonic metal",
        "Christian metal",
        "Pirate metal",
        "Math metal",
        "Kawaii metal",
      ],
    },
    {
      genre: "R&B / Soul",
      slug: "r-b-soul",
      order: 8,
      subgenres: [
        "Alternative R&B",
        "Contemporary R&B",
        "Disco",
        "Funk",
        "Gospel (Southern / Urban)",
        "New jack swing",
        "Post-disco (Boogie)",
        "Doo-wop",
        "Blue-eyed soul",
        "Classic soul",
        "Hip-hop soul",
        "Neo soul",
        "Northern soul",
        "Quiet storm",
        "Psychedelic soul",
      ],
    },
    {
      genre: "Reggae",
      slug: "reggae",
      order: 11,
      subgenres: ["Roots Reggae", "Dub", "Dancehall", "Reggaetón"],
    },
    {
      genre: "Música Latina",
      slug: "latin-musica-latina",
      order: 12,
      subgenres: [
        "Salsa",
        "Merengue",
        "Reggaetón",
        "Bachata",
        "Latin Pop",
        "Cumbia",
        "Dembow",
        "Guaracha",
      ],
    },
    {
      genre: "Alternative / Indie",
      slug: "alternative-indie",
      order: 21,
      subgenres: ["Alternative Rock", "Indie Pop", "Shoegaze", "Post-Rock", "Emo"],
    },
    {
      genre: "Soundtrack / Música para medios",
      slug: "soundtrack-musica-para-medios",
      order: 19,
      subgenres: ["Film Score", "Video Game Music", "Musical Theater", "Anime Soundtracks"],
    },
    {
      genre: "Punk",
      slug: "punk",
      order: 17,
      subgenres: [
        "Hardcore Punk",
        "Pop Punk",
        "Post-Punk",
        "Skate Punk",
        "Anarcho-Punk",
        "Crust Punk",
        "Emo",
        "Psychobilly",
      ],
    },
    {
      genre: "Afro-Latino / Urbano",
      slug: "afro-latino-urbano",
      order: 27,
      subgenres: [
        "Reggaetón",
        "Hip-Hop en español",
        "Latin trap",
        "Dembow",
        "Champeta urbana",
        "Baile funk (Funk carioca)",
        "Guaracha",
      ],
    },
    {
      genre: "Industrial / Noise",
      slug: "industrial-noise",
      order: 40,
      subgenres: [
        "Industrial hardcore",
        "Power electronics",
        "Harsh noise",
        "Noise music",
        "Electro-industrial",
        "Witch house",
      ],
    },

  ];
  
  // Utilidades
  export const MAIN_GENRES = MUSIC_GENRES.map((g) => g.genre);
  
  export function getSubgenres(main: string): string[] {
    const found = MUSIC_GENRES.find((g) => g.genre === main);
    return found ? found.subgenres : [];
  }
  
  export const ALL_SUBGENRES: string[] = Array.from(
    new Set(MUSIC_GENRES.flatMap((g) => g.subgenres))
  ).sort();